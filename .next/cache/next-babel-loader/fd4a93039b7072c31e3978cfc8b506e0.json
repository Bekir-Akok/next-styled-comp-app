{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  basket: []\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n  console.log(state);\n\n  switch (action.type) {\n    case 'ADD_TOO_BASKET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        basket: [...state.basket, action.item]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/reactProject/next-js-sc-app/components/Reducer/reducer.js"],"names":["initialState","basket","reducer","state","action","console","log","type","item"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE;AADgB,CAArB;;AAKP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEC,UAAQC,MAAM,CAACG,IAAf;AACI,SAAK,gBAAL;AACC,6CACOJ,KADP;AAEIF,QAAAA,MAAM,EAAE,CAAE,GAAGE,KAAK,CAACF,MAAX,EAAmBG,MAAM,CAACI,IAA1B;AAFZ;;AAIA;AACG,aAAOL,KAAP;AAPR;AASJ,CAbD;;AAeA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    basket: [],\r\n};\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action)\r\n    console.log(state)\r\n\r\n     switch (action.type) {\r\n         case 'ADD_TOO_BASKET':\r\n          return {\r\n              ...state,\r\n              basket: [ ...state.basket, action.item ]\r\n          }\r\n          default:\r\n             return state ; \r\n    }\r\n}\r\n\r\nexport default reducer ;"]},"metadata":{},"sourceType":"module"}